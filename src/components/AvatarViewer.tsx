import React, { useState } from 'react';
import { Canvas } from '@react-three/fiber';
import { OrbitControls, useGLTF } from '@react-three/drei';

const ModelPath = '/office-lady.glb';

export function AvatarViewer() {
  return (
    <div className="avatar-container">
      <Canvas
        style={{ width: '100%', height: '500px' }}
        camera={{ position: [0, 1.5, 1], fov: 50 }}
      >
        <ambientLight intensity={0.5} />
        <directionalLight position={[0, 5, 5]} scale={2} />
        <Model position={[0, -1.6, 0.5]} />
        <OrbitControls
          maxPolarAngle={2}
          minPolarAngle={1.5}
          minDistance={0.95}
          maxDistance={0.9}
        />
      </Canvas>
    </div>
  );
}

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { GroupProps } from '@react-three/fiber';
import * as THREE from 'three';

export function Model(props: GroupProps) {
  const { nodes, materials } = useGLTF('/office-lady.glb')
  return (
    <group {...props} dispose={null}>
      <primitive object={nodes.Hips} />
      <skinnedMesh
        name="EyeLeft"
        geometry={(nodes.EyeLeft as THREE.Mesh).geometry}
        material={materials.Wolf3D_Eye}
        skeleton={(nodes.EyeLeft as THREE.SkinnedMesh).skeleton}
        morphTargetDictionary={
          (nodes.EyeLeft as THREE.Mesh).morphTargetDictionary
        }
        morphTargetInfluences={
          (nodes.EyeLeft as THREE.Mesh).morphTargetInfluences
        }
      />
      <skinnedMesh
        name="EyeRight"
        geometry={(nodes.EyeRight as THREE.Mesh).geometry}
        material={materials.Wolf3D_Eye}
        skeleton={(nodes.EyeRight as THREE.SkinnedMesh).skeleton}
        morphTargetDictionary={
          (nodes.EyeRight as THREE.Mesh).morphTargetDictionary
        }
        morphTargetInfluences={
          (nodes.EyeRight as THREE.Mesh).morphTargetInfluences
        }
      />
      <skinnedMesh
        name="Wolf3D_Head"
        geometry={(nodes.Wolf3D_Head as THREE.Mesh).geometry}
        material={materials.Wolf3D_Skin}
        skeleton={(nodes.Wolf3D_Head as THREE.SkinnedMesh).skeleton}
        morphTargetDictionary={(nodes.Wolf3D_Head as THREE.Mesh).morphTargetDictionary}
        morphTargetInfluences={(nodes.Wolf3D_Head as THREE.Mesh).morphTargetInfluences}
      />
      <skinnedMesh
        name="Wolf3D_Teeth"
        geometry={(nodes.Wolf3D_Teeth as THREE.Mesh).geometry}
        material={materials.Wolf3D_Teeth}
        skeleton={(nodes.Wolf3D_Teeth as THREE.SkinnedMesh).skeleton}
        morphTargetDictionary={(nodes.Wolf3D_Teeth as THREE.Mesh).morphTargetDictionary}
        morphTargetInfluences={(nodes.Wolf3D_Teeth as THREE.Mesh).morphTargetInfluences}
      />
      <skinnedMesh
        geometry={(nodes.Wolf3D_Hair as THREE.Mesh).geometry}
        material={materials.Wolf3D_Hair}
        skeleton={(nodes.Wolf3D_Hair as THREE.SkinnedMesh).skeleton}
      />
      <skinnedMesh
        geometry={(nodes.Wolf3D_Body as THREE.Mesh).geometry}
        material={materials.Wolf3D_Body}
        skeleton={(nodes.Wolf3D_Body as THREE.SkinnedMesh).skeleton}
      />
      <skinnedMesh
        geometry={(nodes.Wolf3D_Outfit_Bottom as THREE.Mesh).geometry}
        material={materials.Wolf3D_Outfit_Bottom}
        skeleton={(nodes.Wolf3D_Outfit_Bottom as THREE.SkinnedMesh).skeleton}
      />
      <skinnedMesh
        geometry={(nodes.Wolf3D_Outfit_Footwear as THREE.Mesh).geometry}
        material={materials.Wolf3D_Outfit_Footwear}
        skeleton={(nodes.Wolf3D_Outfit_Footwear as THREE.SkinnedMesh).skeleton}
      />
      <skinnedMesh
        geometry={(nodes.Wolf3D_Outfit_Top as THREE.Mesh).geometry}
        material={materials.Wolf3D_Outfit_Top}
        skeleton={(nodes.Wolf3D_Outfit_Top as THREE.SkinnedMesh).skeleton}
      />
    </group>
  );
}

useGLTF.preload(ModelPath)